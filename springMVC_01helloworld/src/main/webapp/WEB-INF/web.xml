<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!-- 配置SpringMVC的前端控制器 DispatcherServlet -->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>  <!-- 名称可以随便写 -->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!-- 通过初始化参数指定SpringMVC配置文件的位置和名称 -->
                <init-param>
                        <!-- contextConfigLocation为固定值 -->
                    <param-name>ContextConfigLocation</param-name>
                        <!-- 使用classpath:表示从类路径查找配置文件，例如maven工程中的 src/main/resources -->
                    <param-value>classpath:springmvc-config.xml</param-value>
                </init-param>

        <!--作为框架的核心组件，在启动过程中有大量的初始化操作要做
        而这些操作放在第一次请求时才执行会严重影响访问速度
        因此需要通过此标签将启动控制DispatcherServlet的初始化时间提前到服务器启动时 -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!--
            /  : 能匹配所有的请求，但是不能包括 .jsp 结尾的请求 会交给tomcat的 JSPServlet 进行处理.  （推荐使用）、且需 springmvc 开启静态资源处理, 才能访问静态资源
            /* : 能匹配到所有的请求(包括)
            *.do : 后缀匹配 ,
              优点：1. 静态资源不会经过 springmvc， 不用额外开启静态资源配置 ;
                   2. 可以实现伪静态的效果, 比如 *.html
                       作用1: 给黑客入侵增加难度.
                       作用2: 有利于SEO的优化(排名更靠前)
              缺点：不符合 RESTful 风格
              推荐方式:
         -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>